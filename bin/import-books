#!/usr/bin/env ruby

require 'dotenv'
require 'nokogiri'
require 'oauth'
require 'uri'
require 'what2read/database'
require 'what2read/book'

Dotenv.load!

GOODREADS_API_KEY    = ENV.fetch('GOODREADS_API_KEY')
GOODREADS_API_SECRET = ENV.fetch('GOODREADS_API_SECRET')
GOODREADS_USER_ID    = (ARGV[0] || ENV.fetch('GOODREADS_USER_ID')).to_i
OAUTH_ACCESS_TOKEN   = ENV.fetch('OAUTH_ACCESS_TOKEN')
OAUTH_ACCESS_SECRET  = ENV.fetch('OAUTH_ACCESS_SECRET')

consumer = OAuth::Consumer.new(
  GOODREADS_API_KEY, GOODREADS_API_SECRET, site: 'https://www.goodreads.com')

access_token = OAuth::AccessToken.new(
  consumer, OAUTH_ACCESS_TOKEN, OAUTH_ACCESS_SECRET)

What2Read::Database.truncate_tables!

page = 1

loop do
  query = URI.encode_www_form(
    v:        2,
    id:       GOODREADS_USER_ID,
    shelf:    'to-read',
    page:     page,
    per_page: 200,
    key:      GOODREADS_API_KEY,
  )
  response = access_token.get("/review/list.xml?#{query}")

  doc = Nokogiri.XML(response.body)

  doc.css('review').each do |review_node|
    puts What2Read::Book.parse_and_create(review_node).title
  end

  book_count = What2Read::Book.count
  fetched_count = doc.at('reviews')['total'].to_i

  if book_count == fetched_count
    break # done
  end

  if book_count > fetched_count
    raise 'mismatched book count'
  end

  page += 1 # continue
end

What2Read::Book.each(&:update_score!)
